name: PR Build Validation (Windows)

on:
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    name: Build for Windows
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Godot - Export Templates
        uses: chickensoft-games/setup-godot@v2
        with:
          godot-version: '4.3'
          install-export-templates: true

      - name: Criar Diretório de Build
        run: mkdir -p build/windows

      - name: Exportar Jogo (Debug Build Windows para Pull Requests)
        run: |
          godot --headless --export-debug "Windows Desktop" "build/windows/TicketToClass_Dev.exe"

      - name: Arquiva Windows Build Output
        shell: bash
        run: |
          cd build/windows
          EXECUTABLE_NAME="TicketToClass_Dev.exe"
          PCK_NAME="${EXECUTABLE_NAME%.exe}.pck"
          ARCHIVE_NAME="TicketToClass_Dev_Windows.zip"

          if [ -f "$EXECUTABLE_NAME" ] && [ -f "$PCK_NAME" ]; then
            zip "$ARCHIVE_NAME" "$EXECUTABLE_NAME" "$PCK_NAME"
          elif [ -f "$EXECUTABLE_NAME" ]; then
            # Se apenas o executável existir (talvez o .pck esteja embutido ou não seja gerado)
            zip "$ARCHIVE_NAME" "$EXECUTABLE_NAME"
          else
            echo "Erro: Arquivo executável não encontrado para arquivamento."
            exit 1
          fi
          # Move o arquivo zip para o diretório build para facilitar o upload do artefato
          mv "$ARCHIVE_NAME" ../

      - name: Upload de Artefato - Dev Build (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: dev-build-windows
          path: |
            build/TicketToClass_Dev_Windows.zip
          if-no-files-found: error
          retention-days: 7
